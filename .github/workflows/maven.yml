# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: '**'
  pull_request:
    branches: [ main, generateFeatures-GA ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    strategy:
      fail-fast: false
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        os: [ubuntu-18.04, windows-latest]
        RUNTIME: [ol, wlp]
        RUNTIME_VERSION: [21.0.0.9, 21.0.0.12]
        java: [11, 8]
        exclude:
        - java: 8
          RUNTIME_VERSION: 21.0.0.9

    name: ${{ matrix.RUNTIME }} ${{ matrix.RUNTIME_VERSION }}, Java ${{ matrix.java }}, ${{ matrix.os }}
    steps:
    - name: Checkout ci.maven
      uses: actions/checkout@v2
    - name: Checkout ci.common
      uses: actions/checkout@v2
      with:
        repository: OpenLiberty/ci.common
        ref: generateFeatures-GA
        path: ci.common
    - name: Checkout ci.ant
      uses: actions/checkout@v2
      with:
        repository: OpenLiberty/ci.ant
        path: ci.ant
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.8.1
    - name: Setup Java ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
        cache: 'maven'
    - name: Cache maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Install ci.ant and ci.common
      run: |
        cd ./ci.ant
        mvn clean install
        cd ../ci.common
        mvn clean install
        cd ..
    - name: Run tests with maven
      run: mvn verify -Ponline-its -D"invoker.streamLogs"=true -Druntime=${{ matrix.RUNTIME }} -DruntimeVersion="${{ matrix.RUNTIME_VERSION }}"
